name: Continuous Deployment
on:
  push:
    branches:
      - main
  workflow_dispatch: 
env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/zoozone-app
  ENVIRONMENT: dev
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev 
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm install
    - name: Build project
      run: npm run build
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Get current date
      id: date
      run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: Get short SHA
      id: slug
      run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      run: |
        IMAGE_TAG="frontend-${{ steps.date.outputs.DATE }}-${{ steps.slug.outputs.SHORT_SHA }}"
        docker build -t ${{ env.DOCKER_IMAGE }}:${IMAGE_TAG} .
        docker push ${{ env.DOCKER_IMAGE }}:${IMAGE_TAG}
        
    - name: Set up kubectl
      uses: azure/setup-kubectl@v4.0.0
      with:
        version: 'latest'
    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
        kubectl config view --raw

    - name: Update Kubernetes Deployment
      run: |
        IMAGE_TAG="frontend-${{ steps.date.outputs.DATE }}-${{ steps.slug.outputs.SHORT_SHA }}"
        sed -i 's|${IMAGE_TAG}|'"${IMAGE_TAG}"'|' k8s/frontend-deployment.yml
        kubectl apply -f k8s/frontend-deployment.yml --namespace ${{ env.ENVIRONMENT }} --validate=false
        kubectl rollout status deployment/frontend --namespace ${{ env.ENVIRONMENT }}
        
    - name: Apply Kubernetes Service
      run: |
        kubectl apply -f k8s/frontend-service.yml --namespace ${{ env.ENVIRONMENT }} --validate=false

    - name: Ensure service is running
      run: |
        kubectl get svc frontend-service --namespace ${{ env.ENVIRONMENT }}
